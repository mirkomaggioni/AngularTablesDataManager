{"version":3,"sources":["Services/Entities/FieldConfigurationsService.ts"],"names":[],"mappings":"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","file":"FieldConfigurationsService.js","sourcesContent":["/// <reference path=\"../../app.ts\" />\r\n/// <reference path=\"../../commons.ts\" />\r\n/// <reference path=\"../../models/fieldconfigurations.ts\" />\r\n/// <reference path=\"../../models/services.ts\" />\r\n/// <reference path=\"../../../scripts/typings/angularjs/angular-resource.d.ts\" />\r\n\r\nmodule AngularTablesDataManagerApp.Services {\r\n    import ngr = ng.resource;\r\n    import commons = AngularTablesDataManagerApp.Commons;\r\n    import models = AngularTablesDataManagerApp.Models;\r\n    import services = AngularTablesDataManagerApp.Services;\r\n\r\n    export interface IFieldConfigurationsResourceClass extends ngr.IResourceClass<ngr.IResource<models.IFieldConfiguration>> {\r\n        create(zip: models.IFieldConfiguration): ngr.IResource<models.IFieldConfiguration>;\r\n    }\r\n\r\n    export class FieldConfigurationsService {\r\n        private resource: IFieldConfigurationsResourceClass;\r\n        private $q: ng.IQService;\r\n        private $filter: ng.IFilterService;\r\n        private metadataService: services.MetadataService;\r\n        private entitySet: string = 'FieldConfigurations';\r\n        private fieldConfigurations: Array<models.IFieldConfiguration>;\r\n\r\n        constructor($resource: ngr.IResourceService, $q: ng.IQService, $filter: ng.IFilterService, metadataService: services.MetadataService) {\r\n            this.$q = $q;\r\n            this.$filter = $filter;\r\n            this.metadataService = metadataService;\r\n\r\n            this.resource = <IFieldConfigurationsResourceClass>$resource('/odata/' + this.entitySet + \"(guid':key')\", { key: '@Id' }, {\r\n                get: { method: 'GET' },\r\n                create: { method: 'POST', isArray: false, url: '/odata/' + this.entitySet },\r\n                save: { method: 'PUT' },\r\n                query: { method: 'GET', isArray: false, url: '/odata/' + this.entitySet },\r\n                delete: { method: 'DELETE' }\r\n            });\r\n        }\r\n\r\n        public create(fieldConfiguration: models.IFieldConfiguration) {\r\n            return this.resource.create(fieldConfiguration);\r\n        }\r\n\r\n        public save(fieldConfiguration: models.IFieldConfiguration) {\r\n            if (fieldConfiguration.Id == commons.Constants.GuidEmpty) {\r\n                return this.resource.create(fieldConfiguration);\r\n            }\r\n            else {\r\n                return this.resource.save(fieldConfiguration);\r\n            }\r\n        }\r\n\r\n        public delete(fieldConfiguration: models.IFieldConfiguration) {\r\n            return this.resource.delete({ key: fieldConfiguration.Id });\r\n        }\r\n\r\n        public getFieldConfigurationTipology(entityName: string, fieldName: string): ng.IPromise<string> {\r\n            var defer: ng.IDeferred<string> = this.$q.defer();\r\n\r\n            this.getFieldConfiguration(entityName, fieldName).then((data: models.IFieldConfiguration) => {\r\n                if (data != null) {\r\n                    defer.resolve(data.Tipology);\r\n                }\r\n                else {\r\n                    defer.resolve('');\r\n                }\r\n            }, (error) => {\r\n                defer.reject(error);\r\n            });\r\n\r\n            return defer.promise;\r\n        }\r\n\r\n        public getFieldValues(entityName: string, fieldName: string): ng.IPromise<Array<string>> {\r\n            var defer: ng.IDeferred<Array<string>> = this.$q.defer();\r\n            var vm = this;\r\n\r\n            this.getFieldConfiguration(entityName, fieldName).then((data: models.IFieldConfiguration) => {\r\n                if (data != null && data.Values != null && data.Values != \"\") {\r\n                    defer.resolve(data.Values.split(\";\"));\r\n                }\r\n                else {\r\n                    defer.resolve(new Array<string>());\r\n                }\r\n\r\n            }, (error) => {\r\n                defer.reject(error);\r\n            });\r\n\r\n            if (this.fieldConfigurations) {\r\n\r\n            }\r\n            else {\r\n\r\n            }\r\n\r\n            return defer.promise;\r\n        }\r\n\r\n        private getFieldConfiguration(entityName: string, fieldName: string): ng.IPromise<models.IFieldConfiguration> {\r\n            var defer: ng.IDeferred<models.IFieldConfiguration> = this.$q.defer();\r\n            var vm = this;\r\n\r\n            if (this.fieldConfigurations == null) {\r\n                vm.resource.query().$promise.then((data: any) => {\r\n                    vm.fieldConfigurations = data[\"value\"];\r\n                    defer.resolve(vm.getField(entityName, fieldName));\r\n                }, (error) => {\r\n                    defer.reject(error);\r\n                });\r\n            }\r\n            else {\r\n                defer.resolve(vm.getField(entityName, fieldName));\r\n            }\r\n\r\n            return defer.promise;\r\n        }\r\n\r\n        private getField(entityName: string, fieldName: string): models.IFieldConfiguration {\r\n            var fieldConfigurations: Array<models.IFieldConfiguration> = this.$filter('filter')(this.fieldConfigurations, { 'Entity': entityName, 'Field': fieldName });\r\n            if (fieldConfigurations.length > 0) {\r\n                return fieldConfigurations[0];\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        static factory() {\r\n            return (r: ngr.IResourceService, $q: ng.IQService, $filter: ng.IFilterService, MetadataService: services.MetadataService) => new FieldConfigurationsService(r, $q, $filter, MetadataService);\r\n        }\r\n    }\r\n\r\n    AngularTablesDataManager.module.factory('FieldConfigurationsService', ['$resource', '$q', '$filter', 'MetadataService', FieldConfigurationsService.factory()]);\r\n}\r\n"]}