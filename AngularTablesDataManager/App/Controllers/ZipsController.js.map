{"version":3,"sources":["Controllers/ZipsController.ts"],"names":[],"mappings":"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","file":"ZipsController.js","sourcesContent":["/// <reference path=\"../../scripts/typings/angular-ui-bootstrap/angular-ui-bootstrap.d.ts\" />\r\n/// <reference path=\"../../scripts/typings/angularjs-toaster/angularjs-toaster.d.ts\" />\r\n/// <reference path=\"../../scripts/typings/angularjs/angular-resource.d.ts\" />\r\n/// <reference path=\"../models/grid.ts\" />\r\n/// <reference path=\"../services/entities/zipsservice.ts\" />\r\n\r\nmodule AngularTablesDataManagerApp.Controllers {\r\n    import ngr = ng.resource;\r\n    import commons = AngularTablesDataManagerApp.Commons;\r\n    import models = AngularTablesDataManagerApp.Models;\r\n    import services = AngularTablesDataManagerApp.Services;\r\n\r\n    export class ZipsController {\r\n        grid: models.Grid;\r\n        rowModel: models.Row;\r\n        toaster: ngtoaster.IToasterService;\r\n\r\n        private zipsService: services.ZipsService;\r\n        private constant: commons.Constants;\r\n\r\n        constructor(toaster: ngtoaster.IToasterService, ZipsService: services.ZipsService) {\r\n            this.zipsService = ZipsService;\r\n            this.constant = commons.Constants;\r\n            this.toaster = toaster;\r\n\r\n            this.grid = new models.Grid();\r\n            this.grid.Title = 'Zips';\r\n            this.Load();\r\n        }\r\n\r\n        private Load() {\r\n            var columns: Array<string> = new Array<string>('Code');\r\n            var vm = this;\r\n\r\n            this.zipsService.getMetadata(columns).then((data) => {\r\n                vm.grid.Columns = data;\r\n                vm.rowModel = this.zipsService.createGridData(data);\r\n\r\n                this.zipsService.getGridData(data).then((data) => {\r\n                    vm.grid.Rows = data;\r\n                    vm.toaster.success('Zips loaded successfully.');\r\n                    return;\r\n                }, (error) => {\r\n                    vm.toaster.error('Error loading zips', error.message);\r\n                });\r\n\r\n            }, (error) => {\r\n                vm.toaster.error('Error loading zips metadata', error.data.message);\r\n            });\r\n        }\r\n\r\n        public Save(item: models.Row) {\r\n            var vm = this;\r\n            var isNew: boolean = false;\r\n\r\n            if (item.Entity.Id == commons.Constants.GuidEmpty)\r\n                isNew = true;\r\n\r\n            this.zipsService.saveGridData(item).then((data: models.Row) => {\r\n                if (isNew)\r\n                    vm.grid.Rows.push(data);\r\n\r\n                this.toaster.success(\"Zip saved successfully.\");\r\n            }, (error: any) => {\r\n                this.toaster.error(\"Error saving zip\", error.data.message);\r\n            });\r\n        }\r\n\r\n        public Delete(item: models.Row) {\r\n            var vm = this;\r\n            this.zipsService.deleteGridData(item).then((data: any) => {\r\n                var index = vm.grid.Rows.indexOf(item);\r\n                vm.grid.Rows.splice(index, 1);\r\n\r\n                this.toaster.success(\"Zip deleted successfully.\");\r\n            }, (error: any) => {\r\n                this.toaster.error(\"Error deleting zip\", error.data.message);\r\n            });\r\n        }\r\n    }\r\n\r\n    AngularTablesDataManager.module.controller('ZipsController', ZipsController);\r\n}"]}