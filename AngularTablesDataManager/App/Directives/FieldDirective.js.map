{"version":3,"sources":["Directives/FieldDirective.ts"],"names":[],"mappings":"AAAA,0CAA0C;AAC1C,2EAA2E;AAE3E,IAAO,2BAA2B,CAuCjC;AAvCD,WAAO,2BAA2B;IAAC,IAAA,UAAU,CAuC5C;IAvCkC,WAAA,UAAU,EAAC,CAAC;QAS3C;YAwBI,wBAAmB,yBAA8D;gBAxBrF,iBA2BC;gBAzBU,aAAQ,GAAG,GAAG,CAAC;gBACf,UAAK,GAAG;oBACX,UAAU,EAAE,GAAG;oBACf,QAAQ,EAAE,GAAG;iBAChB,CAAC;gBACK,SAAI,GAAG,UAAC,KAA2B,EAAE,OAAe,EAAE,KAAiB;oBAE1E,KAAI,CAAC,0BAA0B,CAAC,qBAAqB,CAAC,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI;wBACnG,IAAI,QAAQ,GAAW,IAAI,CAAC;wBAC5B,EAAE,CAAC,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC,CAAC;4BACjB,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC;wBACnC,CAAC;wBAED,EAAE,CAAC,CAAC,QAAQ,IAAI,YAAY,CAAC,CAAC,CAAC;4BAC3B,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;wBACjC,CAAC;wBACD,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC9D,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;wBACnC,CAAC;oBACL,CAAC,CAAC,CAAC;gBACP,CAAC,CAAA;gBAGG,IAAI,CAAC,0BAA0B,GAAG,yBAAyB,CAAC;YAChE,CAAC;YACL,qBAAC;QAAD,CA3BA,AA2BC,IAAA;QA3BY,yBAAc,iBA2B1B,CAAA;QAED,oDAAwB,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,4BAA4B,EAAE,UAAC,yBAA8D,IAAK,OAAA,IAAI,UAAU,CAAC,cAAc,CAAC,yBAAyB,CAAC,EAAxD,CAAwD,CAAC,CAAC,CAAC;IACrN,CAAC,EAvCkC,UAAU,GAAV,sCAAU,KAAV,sCAAU,QAuC5C;AAAD,CAAC,EAvCM,2BAA2B,KAA3B,2BAA2B,QAuCjC","file":"FieldDirective.js","sourcesContent":["/// <reference path=\"../models/grid.ts\" />\r\n/// <reference path=\"../services/entities/fieldconfigurationsservice.ts\" />\r\n\r\nmodule AngularTablesDataManagerApp.Directives {\r\n    import models = AngularTablesDataManagerApp.Models;\r\n    import services = AngularTablesDataManagerApp.Services;\r\n\r\n    interface IFieldDirectiveScope extends ng.IScope {\r\n        entityName: string;\r\n        tipology: models.MetadataProperty;\r\n    }\r\n\r\n    export class FieldDirective implements ng.IDirective {\r\n        fieldConfigurationsService: services.FieldConfigurationsService;\r\n        public restrict = 'A';\r\n        public scope = {\r\n            entityName: '=',\r\n            tipology: '='\r\n        };\r\n        public link = (scope: IFieldDirectiveScope, element: JQuery, attrs: IArguments) => {\r\n\r\n            this.fieldConfigurationsService.getFieldConfiguration(scope.entityName, scope.tipology.Name).then((data) => {\r\n                var tipology: string = data;\r\n                if (tipology == '') {\r\n                    tipology = scope.tipology.Type;\r\n                }\r\n\r\n                if (tipology == 'Edm.String') {\r\n                    element.attr('type', 'text');\r\n                }\r\n                else if (scope.tipology.Type.toLowerCase().indexOf('int') != -1) {\r\n                    element.attr('type', 'number');\r\n                }\r\n            });\r\n        }\r\n\r\n        public constructor(fieldConfigurationService: services.FieldConfigurationsService) {\r\n            this.fieldConfigurationsService = fieldConfigurationService;\r\n        }\r\n    }\r\n\r\n    AngularTablesDataManager.module.directive('field', ['FieldConfigurationsService', (fieldConfigurationService: services.FieldConfigurationsService) => new Directives.FieldDirective(fieldConfigurationService)]);\r\n}"]}