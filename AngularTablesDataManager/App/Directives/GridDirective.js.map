{"version":3,"sources":["Directives/GridDirective.ts"],"names":[],"mappings":"AAAA,0CAA0C;AAC1C,sCAAsC;AAEtC,IAAO,2BAA2B,CAgMjC;AAhMD,WAAO,2BAA2B;IAAC,IAAA,UAAU,CAgM5C;IAhMkC,WAAA,UAAU,EAAC,CAAC;QAE3C,IAAO,MAAM,GAAG,2BAA2B,CAAC,MAAM,CAAC;QAoBnD;YAGI,wBAAY,MAA2B;gBACnC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACzB,CAAC;YAEM,6BAAI,GAAX,UAAY,IAAgB;gBACxB,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;gBACxB,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;YAChC,CAAC;YAEM,4BAAG,GAAV;gBACI,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;gBACvJ,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;YAC/B,CAAC;YAEM,6BAAI,GAAX,UAAY,IAAgB;gBACxB,IAAI,GAAG,GAAc,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;gBAEpC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAC1B,CAAC;YAEM,+BAAM,GAAb,UAAc,IAAgB;gBAC1B,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;gBACxB,IAAI,GAAG,GAAc,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;gBAEpC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAC5B,CAAC;YAEM,8BAAK,GAAZ;gBACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;oBACvB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC1D,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,GAAS,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAO,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;oBAC/G,CAAC;gBACL,CAAC;gBAED,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;YAC5B,CAAC;YAEM,sCAAa,GAApB;gBACI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;YAClC,CAAC;YACL,qBAAC;QAAD,CA3CA,AA2CC,IAAA;QAED;YAAA;gBACW,aAAQ,GAAG,GAAG,CAAC;gBACf,gBAAW,GAAG,0BAA0B,CAAC;gBACzC,UAAK,GAAG;oBACX,UAAU,EAAE,GAAG;oBACf,IAAI,EAAE,GAAG;oBACT,QAAQ,EAAE,GAAG;oBACb,KAAK,EAAE,QAAQ;oBACf,GAAG,EAAE,MAAM;oBACX,IAAI,EAAE,OAAO;oBACb,MAAM,EAAE,SAAS;iBACpB,CAAC;gBACK,eAAU,GAAG,cAAc,CAAC;YACvC,CAAC;YAAD,oBAAC;QAAD,CAbA,AAaC,IAAA;QAbY,wBAAa,gBAazB,CAAA;QAOD;YAAA;gBACW,YAAO,GAAG,OAAO,CAAC;gBAClB,aAAQ,GAAG,GAAG,CAAC;gBACf,gBAAW,GAAG,8BAA8B,CAAC;gBAC7C,UAAK,GAAG;oBACX,IAAI,EAAE,GAAG;oBACT,KAAK,EAAE,GAAG;iBACb,CAAC;gBACK,SAAI,GAAG,UAAC,KAA8B,EAAE,OAA4B,EAAE,KAAiB,EAAE,QAAwB;oBACpH,KAAK,CAAC,GAAG,GAAG;wBACR,QAAQ,CAAC,GAAG,EAAE,CAAC;oBACnB,CAAC,CAAA;gBACL,CAAC,CAAA;YACL,CAAC;YAAD,wBAAC;QAAD,CAbA,AAaC,IAAA;QAbY,4BAAiB,oBAa7B,CAAA;QAED;YAAA;gBACW,aAAQ,GAAG,GAAG,CAAC;gBACf,gBAAW,GAAG,gCAAgC,CAAC;gBAC/C,UAAK,GAAG;oBACX,UAAU,EAAE,GAAG;iBAClB,CAAC;YACN,CAAC;YAAD,0BAAC;QAAD,CANA,AAMC,IAAA;QANY,8BAAmB,sBAM/B,CAAA;QAOD;YAAA;gBACW,YAAO,GAAG,OAAO,CAAC;gBAClB,aAAQ,GAAG,GAAG,CAAC;gBACf,gBAAW,GAAG,6BAA6B,CAAC;gBAC5C,UAAK,GAAG;oBACX,OAAO,EAAE,GAAG;iBACf,CAAC;gBACK,SAAI,GAAG,UAAC,KAA6B,EAAE,OAA4B,EAAE,KAAiB,EAAE,QAAwB;oBACnH,KAAK,CAAC,IAAI,GAAG;wBACT,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;oBACjC,CAAC,CAAA;gBACL,CAAC,CAAA;YACL,CAAC;YAAD,uBAAC;QAAD,CAZA,AAYC,IAAA;QAZY,2BAAgB,mBAY5B,CAAA;QAED;YAAA;gBACW,aAAQ,GAAG,GAAG,CAAC;gBACf,gBAAW,GAAG,8BAA8B,CAAC;gBAC7C,UAAK,GAAG;oBACX,QAAQ,EAAE,GAAG;iBAChB,CAAC;YACN,CAAC;YAAD,wBAAC;QAAD,CANA,AAMC,IAAA;QANY,4BAAiB,oBAM7B,CAAA;QAcD;YAgCI,2BAAmB,OAA0B;gBAhCjD,iBAmCC;gBAjCU,YAAO,GAAG,OAAO,CAAC;gBAClB,aAAQ,GAAG,GAAG,CAAC;gBACf,gBAAW,GAAG,8BAA8B,CAAC;gBAC7C,UAAK,GAAG;oBACX,IAAI,EAAE,GAAG;oBACT,QAAQ,EAAE,GAAG;oBACb,KAAK,EAAE,GAAG;iBACb,CAAC;gBACK,SAAI,GAAG,UAAC,KAA8B,EAAE,OAA4B,EAAE,KAAiB,EAAE,QAAwB;oBACpH,KAAK,CAAC,IAAI,GAAG;wBACT,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;oBAC9B,CAAC,CAAA;oBAED,KAAK,CAAC,MAAM,GAAG;wBACX,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;oBAChC,CAAC,CAAA;oBAED,KAAK,CAAC,KAAK,GAAG;wBACV,QAAQ,CAAC,KAAK,EAAE,CAAC;oBACrB,CAAC,CAAA;oBAED,KAAK,CAAC,mBAAmB,GAAG,UAAC,IAAY;wBACrC,MAAM,CAAC,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;oBACvE,CAAC,CAAA;oBAED,KAAK,CAAC,aAAa,GAAG;wBAClB,MAAM,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC;oBACpC,CAAC,CAAA;gBACL,CAAC,CAAA;gBAGG,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YAC3B,CAAC;YACL,wBAAC;QAAD,CAnCA,AAmCC,IAAA;QAnCY,4BAAiB,oBAmC7B,CAAA;QAED,oDAAwB,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,cAAM,OAAA,IAAI,UAAU,CAAC,aAAa,EAA5B,CAA4B,CAAC,CAAC;QACtF,oDAAwB,CAAC,MAAM,CAAC,SAAS,CAAC,UAAU,EAAE,cAAM,OAAA,IAAI,UAAU,CAAC,iBAAiB,EAAE,EAAlC,CAAkC,CAAC,CAAC;QAChG,oDAAwB,CAAC,MAAM,CAAC,SAAS,CAAC,YAAY,EAAE,cAAM,OAAA,IAAI,UAAU,CAAC,mBAAmB,EAAlC,CAAkC,CAAC,CAAC;QAClG,oDAAwB,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,EAAE,cAAM,OAAA,IAAI,UAAU,CAAC,gBAAgB,EAA/B,CAA+B,CAAC,CAAC;QAC5F,oDAAwB,CAAC,MAAM,CAAC,SAAS,CAAC,UAAU,EAAE,cAAM,OAAA,IAAI,UAAU,CAAC,iBAAiB,EAAhC,CAAgC,CAAC,CAAC;QAC9F,oDAAwB,CAAC,MAAM,CAAC,SAAS,CAAC,UAAU,EAAE,UAAC,OAA0B,IAAK,OAAA,IAAI,UAAU,CAAC,iBAAiB,CAAC,OAAO,CAAC,EAAzC,CAAyC,CAAC,CAAC;IACrI,CAAC,EAhMkC,UAAU,GAAV,sCAAU,KAAV,sCAAU,QAgM5C;AAAD,CAAC,EAhMM,2BAA2B,KAA3B,2BAA2B,QAgMjC","file":"GridDirective.js","sourcesContent":["/// <reference path=\"../models/grid.ts\" />\r\n/// <reference path=\"../commons.ts\" />\r\n\r\nmodule AngularTablesDataManagerApp.Directives {\r\n    import commons = AngularTablesDataManagerApp.Commons;\r\n    import models = AngularTablesDataManagerApp.Models;\r\n\r\n    interface IGridItem {\r\n        item: models.Row;\r\n    }\r\n\r\n    interface IGridDirectiveScope extends ng.IScope {\r\n        entityName: string;\r\n        list: models.Grid;\r\n        item: models.Row;\r\n        rowModel: models.Row;\r\n        newItem: boolean;\r\n\r\n        New(): void;\r\n        Save(item: IGridItem): void;\r\n        Delete(item: IGridItem): void;\r\n        Close(): void;\r\n        GetEntityName(): string;\r\n    }\r\n\r\n    class GridController {\r\n        $scope: IGridDirectiveScope;\r\n\r\n        constructor($scope: IGridDirectiveScope) {\r\n            this.$scope = $scope;\r\n        }\r\n\r\n        public Edit(item: models.Row) {\r\n            this.$scope.item = item;\r\n            this.$scope.newItem = false;\r\n        }\r\n\r\n        public New() {\r\n            this.$scope.item = new models.Row(angular.copy(this.$scope.rowModel.Entity), this.$scope.rowModel.Name, angular.copy(this.$scope.rowModel.Properties));\r\n            this.$scope.newItem = true;\r\n        }\r\n\r\n        public Save(item: models.Row) {\r\n            var obj: IGridItem = { item: item };\r\n\r\n            this.$scope.Save(obj);\r\n        }\r\n\r\n        public Delete(item: models.Row) {\r\n            this.$scope.item = null;\r\n            var obj: IGridItem = { item: item };\r\n\r\n            this.$scope.Delete(obj);\r\n        }\r\n\r\n        public Close() {\r\n            if (!this.$scope.newItem) {\r\n                for (var i = 0; i < this.$scope.item.Properties.length; i++) {\r\n                    this.$scope.item.Properties[i].Value = (<any>this.$scope.item.Entity)[this.$scope.item.Properties[i].Name];\r\n                }\r\n            }\r\n\r\n            this.$scope.item = null;\r\n        }\r\n\r\n        public GetEntityName() {\r\n            return this.$scope.entityName;\r\n        }\r\n    }\r\n\r\n    export class GridDirective implements ng.IDirective {\r\n        public restrict = 'E';\r\n        public templateUrl = 'app/directives/grid.html';\r\n        public scope = {\r\n            entityName: '=',\r\n            list: '=',\r\n            rowModel: '=',\r\n            order: '@order',\r\n            New: '&new',\r\n            Save: '&save',\r\n            Delete: '&delete'\r\n        };\r\n        public controller = GridController;\r\n    }\r\n\r\n    interface IGridListDirectiveScope extends ng.IScope {\r\n        gridItem: models.Row;\r\n        New(): void;\r\n    }\r\n\r\n    export class GridListDirective implements ng.IDirective {\r\n        public require = '^grid';\r\n        public restrict = 'E';\r\n        public templateUrl = 'app/directives/gridList.html';\r\n        public scope = {\r\n            list: '=',\r\n            order: '='\r\n        };\r\n        public link = (scope: IGridListDirectiveScope, element: ng.IAugmentedJQuery, attrs: IArguments, gridCtrl: GridController) => {\r\n            scope.New = () => {\r\n                gridCtrl.New();\r\n            }\r\n        }\r\n    }\r\n\r\n    export class GridColumnDirective implements ng.IDirective {\r\n        public restrict = 'A';\r\n        public templateUrl = 'app/directives/gridColumn.html';\r\n        public scope = {\r\n            gridColumn: '='\r\n        };\r\n    }\r\n\r\n    interface IGridRowDirectiveScope extends ng.IScope {\r\n        gridRow: models.Row;\r\n        Edit(): void;\r\n    }\r\n\r\n    export class GridRowDirective implements ng.IDirective {\r\n        public require = '^grid';\r\n        public restrict = 'A';\r\n        public templateUrl = 'app/directives/gridRow.html';\r\n        public scope = {\r\n            gridRow: '='\r\n        };\r\n        public link = (scope: IGridRowDirectiveScope, element: ng.IAugmentedJQuery, attrs: IArguments, gridCtrl: GridController) => {\r\n            scope.Edit = () => {\r\n                gridCtrl.Edit(scope.gridRow);\r\n            }\r\n        }\r\n    }\r\n\r\n    export class GridCellDirective implements ng.IDirective {\r\n        public restrict = 'A';\r\n        public templateUrl = 'app/directives/gridCell.html';\r\n        public scope = {\r\n            gridCell: '='\r\n        };\r\n    }\r\n\r\n    interface IGridItemDirectiveScope extends ng.IScope {\r\n        item: models.Row;\r\n        metadata: Array<models.MetadataProperty>;\r\n        isNew: boolean;\r\n\r\n        GetMetadataProperty(Name: string): models.MetadataProperty;\r\n        GetEntityName(): string;\r\n        Save(): void;\r\n        Delete(): void;\r\n        Close(): void;\r\n    }\r\n\r\n    export class GridItemDirective implements ng.IDirective {\r\n        $filter: ng.IFilterService;\r\n        public require = '^grid';\r\n        public restrict = 'E';\r\n        public templateUrl = 'app/directives/gridItem.html';\r\n        public scope = {\r\n            item: '=',\r\n            metadata: '=',\r\n            isNew: '='\r\n        };\r\n        public link = (scope: IGridItemDirectiveScope, element: ng.IAugmentedJQuery, attrs: IArguments, gridCtrl: GridController) => {\r\n            scope.Save = () => {\r\n                gridCtrl.Save(scope.item);\r\n            }\r\n\r\n            scope.Delete = () => {\r\n                gridCtrl.Delete(scope.item);\r\n            }\r\n\r\n            scope.Close = () => {\r\n                gridCtrl.Close();\r\n            }\r\n\r\n            scope.GetMetadataProperty = (Name: string) => {\r\n                return this.$filter('filter')(scope.metadata, { 'Name': Name })[0];\r\n            }\r\n\r\n            scope.GetEntityName = () => {\r\n                return gridCtrl.GetEntityName();\r\n            }\r\n        }\r\n\r\n        public constructor($filter: ng.IFilterService) {\r\n            this.$filter = $filter;\r\n        }\r\n    }\r\n\r\n    AngularTablesDataManager.module.directive('grid', () => new Directives.GridDirective);\r\n    AngularTablesDataManager.module.directive('gridList', () => new Directives.GridListDirective());\r\n    AngularTablesDataManager.module.directive('gridColumn', () => new Directives.GridColumnDirective);\r\n    AngularTablesDataManager.module.directive('gridRow', () => new Directives.GridRowDirective);\r\n    AngularTablesDataManager.module.directive('gridCell', () => new Directives.GridCellDirective);\r\n    AngularTablesDataManager.module.directive('gridItem', ($filter: ng.IFilterService) => new Directives.GridItemDirective($filter));\r\n}\r\n"]}