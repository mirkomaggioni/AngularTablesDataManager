var AngularTablesDataManagerApp;!function(e){var t=function(){function e(){}return e.module=angular.module("angularTablesDataManager",["ngResource","ui.bootstrap","ui.router","toaster","angular-loading-bar"]),e}();e.AngularTablesDataManager=t,t.module.config(["$stateProvider","$urlRouterProvider",function(e,t){t.otherwise("/cities"),e.state("Cities",{url:"/cities",templateUrl:"/app/views/cities.html",controller:"CitiesController as vm"})}])}(AngularTablesDataManagerApp||(AngularTablesDataManagerApp={}));var AngularTablesDataManagerApp;!function(e){var t;!function(e){var t=function(){function e(){}return e.GuidEmpty="00000000-0000-0000-0000-000000000000",e}();e.Constants=t}(t=e.Commons||(e.Commons={}))}(AngularTablesDataManagerApp||(AngularTablesDataManagerApp={}));var AngularTablesDataManagerApp;!function(e){var t;!function(e){var t=function(){function e(){}return e}();e.Grid=t;var r=function(){function e(e,t,r){this.Entity=e,this.Name=t,this.Properties=r}return e}();e.Row=r;var i=function(){function e(){}return e}();e.MetadataProperty=i;var a=function(){function e(e,t,r){this.Name=e,this.Value=t,this.Nullable=r}return e}();e.RowProperty=a}(t=e.Models||(e.Models={}))}(AngularTablesDataManagerApp||(AngularTablesDataManagerApp={}));var AngularTablesDataManagerApp;!function(e){var t;!function(e){var t=function(){function e(e,t,r){this.entitySet=e,this.entityName=t,this.metadataService=r}return e.prototype.getMetadata=function(e){return this.metadataService.getMetadata(this.entitySet,e)},e}();e.GridService=t}(t=e.Services||(e.Services={}))}(AngularTablesDataManagerApp||(AngularTablesDataManagerApp={}));var AngularTablesDataManagerApp;!function(e){var t;!function(t){var r=e.Models,i=function(){function e(e,t,r){this.$http=e,this.$q=t,this.$filter=r}return e.prototype.getMetadata=function(e,t){var i=this.$q.defer(),a={method:"GET",url:"/odata/$metadata#"+e},n=this;return this.$http(a).then(function(e){var a=e.data.toString(),o=$.parseXML(a),s=$(o),u=new Array;return s.find("EntityType").find("Property").each(function(){if(n.$filter("filter")(t,{$:$(this).attr("Name")}).length>0){var e=new r.MetadataProperty;e.Name=$(this).attr("Name"),e.Type=$(this).attr("Type"),e.Nullable=null!=$(this).attr("Nullable")&&"true"==$(this).attr("Nullable").toLowerCase(),u.push(e)}}),i.resolve(u)}),i.promise},e.factory=function(){return function(t,r,i){return new e(t,r,i)}},e}();t.MetadataService=i,e.AngularTablesDataManager.module.factory("MetadataService",["$http","$q","$filter",i.factory()])}(t=e.Services||(e.Services={}))}(AngularTablesDataManagerApp||(AngularTablesDataManagerApp={}));var __extends=this&&this.__extends||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},AngularTablesDataManagerApp;!function(e){var t;!function(t){var r=e.Commons,i=e.Models,a=e.Services,n=function(e){function t(t,r,i){e.call(this,"Cities","City",i),this.$q=r,this.metadataService=i,this.resource=t("/odata/"+this.entitySet+"(guid':key')",{key:"@Id"},{get:{method:"GET"},create:{method:"POST",isArray:!1,url:"/odata/"+this.entitySet},save:{method:"PUT"},query:{method:"GET",isArray:!1,url:"/odata/"+this.entitySet},"delete":{method:"DELETE"}})}return __extends(t,e),t.prototype.create=function(e){return this.resource.create(e)},t.prototype.save=function(e){return e.Id==r.Constants.GuidEmpty?this.resource.create(e):this.resource.save(e)},t.prototype["delete"]=function(e){return this.resource["delete"]({key:e.Id})},t.prototype.getAll=function(){var e,t=this.$q.defer();return this.resource.query().$promise.then(function(r){return e=r.value,t.resolve(e)},function(e){return t.reject(e)}),t.promise},t.prototype.getGridData=function(e){var t,r=this,a=new Array,n=this.$q.defer();return this.getAll().then(function(o){for(var s=0;s<o.length;s++){var u=o[s];t=new Array;for(var l=0;l<e.length;l++)t.push(new i.RowProperty(e[l].Name,u[e[l].Name],e[l].Nullable));a.push(new i.Row(u,r.entityName,t))}return n.resolve(a)},function(e){return n.reject(e)}),n.promise},t.prototype.createGridData=function(e){for(var t={Id:r.Constants.GuidEmpty,Name:""},a=new Array,n=new i.Row(t,"City",a),o=0;o<e.length;o++)a.push(new i.RowProperty(e[o].Name,"",e[o].Nullable));return n},t.prototype.saveGridData=function(e){for(var t=this.$q.defer(),r=0;r<e.Properties.length;r++)e.Entity[e.Properties[r].Name]=e.Properties[r].Value;return this.save(e.Entity).$promise.then(function(r){return e.Entity=r,t.resolve(e)},function(e){return t.reject(e)}),t.promise},t.prototype.deleteGridData=function(e){var t=this.$q.defer();return this["delete"](e.Entity).$promise.then(function(r){return t.resolve(e)},function(e){return t.reject(e)}),t.promise},t.factory=function(){return function(e,r,i){return new t(e,r,i)}},t}(a.GridService);t.CitiesService=n,e.AngularTablesDataManager.module.factory("CitiesService",["$resource","$q","MetadataService",n.factory()])}(t=e.Services||(e.Services={}))}(AngularTablesDataManagerApp||(AngularTablesDataManagerApp={}));var AngularTablesDataManagerApp;!function(e){var t;!function(t){var r=function(){function e(){this.restrict="A",this.scope={tipology:"="},this.link=function(e,t,r){"Edm.String"==e.tipology.Type?t.attr("type","text"):-1!=e.tipology.Type.toLowerCase().indexOf("int")&&t.attr("type","number")}}return e}();t.FieldDirective=r,e.AngularTablesDataManager.module.directive("field",function(){return new t.FieldDirective})}(t=e.Directives||(e.Directives={}))}(AngularTablesDataManagerApp||(AngularTablesDataManagerApp={}));var AngularTablesDataManagerApp;!function(e){var t;!function(t){var r=e.Models,i=function(){function e(e){this.$scope=e}return e.prototype.Edit=function(e){this.$scope.item=e,this.$scope.newItem=!1},e.prototype.New=function(){this.$scope.item=new r.Row(angular.copy(this.$scope.rowModel.Entity),this.$scope.rowModel.Name,angular.copy(this.$scope.rowModel.Properties)),this.$scope.newItem=!0},e.prototype.Save=function(e){var t={item:e};this.$scope.Save(t)},e.prototype.Delete=function(e){this.$scope.item=null;var t={item:e};this.$scope.Delete(t)},e.prototype.Close=function(){this.$scope.item=null},e}(),a=function(){function e(){this.restrict="E",this.templateUrl="app/directives/grid.html",this.scope={list:"=",rowModel:"=",order:"@order",New:"&new",Save:"&save",Delete:"&delete"},this.controller=i}return e}();t.GridDirective=a;var n=function(){function e(){this.require="^grid",this.restrict="E",this.templateUrl="app/directives/gridList.html",this.scope={list:"=",order:"="},this.link=function(e,t,r,i){e.New=function(){i.New()}}}return e}();t.GridListDirective=n;var o=function(){function e(){this.restrict="A",this.templateUrl="app/directives/gridColumn.html",this.scope={gridColumn:"="}}return e}();t.GridColumnDirective=o;var s=function(){function e(){this.require="^grid",this.restrict="A",this.templateUrl="app/directives/gridRow.html",this.scope={gridRow:"="},this.link=function(e,t,r,i){e.Edit=function(){i.Edit(e.gridRow)}}}return e}();t.GridRowDirective=s;var u=function(){function e(){this.restrict="A",this.templateUrl="app/directives/gridCell.html",this.scope={gridCell:"="}}return e}();t.GridCellDirective=u;var l=function(){function e(e){var t=this;this.require="^grid",this.restrict="E",this.templateUrl="app/directives/gridItem.html",this.scope={item:"=",metadata:"=",isNew:"="},this.link=function(e,r,i,a){e.Save=function(){a.Save(e.item)},e.Delete=function(){a.Delete(e.item)},e.Close=function(){a.Close()},e.GetMetadataProperty=function(r){return t.$filter("filter")(e.metadata,{Name:r})[0]}},this.$filter=e}return e}();t.GridItemDirective=l,e.AngularTablesDataManager.module.directive("grid",function(){return new t.GridDirective}),e.AngularTablesDataManager.module.directive("gridList",function(){return new t.GridListDirective}),e.AngularTablesDataManager.module.directive("gridColumn",function(){return new t.GridColumnDirective}),e.AngularTablesDataManager.module.directive("gridRow",function(){return new t.GridRowDirective}),e.AngularTablesDataManager.module.directive("gridCell",function(){return new t.GridCellDirective}),e.AngularTablesDataManager.module.directive("gridItem",["$filter",function(e){return new t.GridItemDirective(e)}])}(t=e.Directives||(e.Directives={}))}(AngularTablesDataManagerApp||(AngularTablesDataManagerApp={}));var AngularTablesDataManagerApp;!function(e){var t;!function(t){var r=e.Commons,i=e.Models,a=function(){function e(e,t){this.citiesService=t,this.constant=r.Constants,this.toaster=e,this.grid=new i.Grid,this.grid.Title="Cities",this.Load()}return e.$inject=["toaster","CitiesService"],e.prototype.Load=function(){var e=this,t=new Array("Name"),r=this;this.citiesService.getMetadata(t).then(function(t){r.grid.Columns=t,r.rowModel=e.citiesService.createGridData(t),e.citiesService.getGridData(t).then(function(e){r.grid.Rows=e,r.toaster.success("Cities loaded successfully.")},function(e){r.toaster.error("Error loading cities",e.message)})},function(e){r.toaster.error("Error loading cities metadata",e.data.message)})},e.prototype.Save=function(e){var t=this,i=this,a=!1;e.Entity.Id==r.Constants.GuidEmpty&&(a=!0),this.citiesService.saveGridData(e).then(function(e){a&&i.grid.Rows.push(e),t.toaster.success("Order saved successfully.")},function(e){t.toaster.error("Error saving order",e.data.message)})},e.prototype.Delete=function(e){var t=this,r=this;this.citiesService.deleteGridData(e).then(function(i){var a=r.grid.Rows.indexOf(e);r.grid.Rows.splice(a,1),t.toaster.success("Order deleted successfully.")},function(e){t.toaster.error("Error deleting order",e.data.message)})},e}();t.CitiesController=a,e.AngularTablesDataManager.module.controller("CitiesController",a)}(t=e.Controllers||(e.Controllers={}))}(AngularTablesDataManagerApp||(AngularTablesDataManagerApp={}));