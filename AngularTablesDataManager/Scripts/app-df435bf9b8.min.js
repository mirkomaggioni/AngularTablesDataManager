var AngularTablesDataManagerApp;!function(t){var e=function(){function t(){}return t.module=angular.module("angularTablesDataManager",["ngResource","ui.bootstrap","ui.router","toaster","angular-loading-bar"]),t}();t.AngularTablesDataManager=e,e.module.config(["$stateProvider","$urlRouterProvider",function(t,e){e.otherwise("/cities"),t.state("Cities",{url:"/cities",templateUrl:"/app/views/cities.html",controller:"CitiesController as vm"}).state("Zips",{url:"/zips",templateUrl:"/app/views/zips.html",controller:"ZipsController as vm"})}])}(AngularTablesDataManagerApp||(AngularTablesDataManagerApp={}));var AngularTablesDataManagerApp;!function(t){var e;!function(t){var e=function(){function t(){}return t.GuidEmpty="00000000-0000-0000-0000-000000000000",t}();t.Constants=e}(e=t.Commons||(t.Commons={}))}(AngularTablesDataManagerApp||(AngularTablesDataManagerApp={}));var AngularTablesDataManagerApp;!function(t){var e;!function(t){var e=function(){function t(){}return t}();t.Grid=e;var r=function(){function t(t,e,r){this.Entity=t,this.Name=e,this.Properties=r}return t}();t.Row=r;var a=function(){function t(){}return t}();t.MetadataProperty=a;var i=function(){function t(t,e,r){this.Name=t,this.Value=e,this.Nullable=r}return t}();t.RowProperty=i}(e=t.Models||(t.Models={}))}(AngularTablesDataManagerApp||(AngularTablesDataManagerApp={}));var AngularTablesDataManagerApp;!function(t){var e;!function(e){var r=t.Models,a=function(){function t(t,e,r){this.entitySet=t,this.entityName=e,this.metadataService=r}return t.prototype.getMetadata=function(t){return this.metadataService.getMetadata(this.entityName,t)},t.prototype.getData=function(t,e){for(var a,i=new Array,n=0;n<e.length;n++){var o=e[n];a=new Array;for(var s=0;s<t.length;s++)a.push(new r.RowProperty(t[s].Name,o[t[s].Name],t[s].Nullable));i.push(new r.Row(o,this.entityName,a))}return i},t.prototype.createData=function(t,e){for(var a=new Array,i=new r.Row(e,"City",a),n=0;n<t.length;n++)a.push(new r.RowProperty(t[n].Name,"",t[n].Nullable));return i},t.prototype.saveData=function(t){for(var e=0;e<t.Properties.length;e++)t.Entity[t.Properties[e].Name]=t.Properties[e].Value;return t.Entity},t}();e.GridService=a}(e=t.Services||(t.Services={}))}(AngularTablesDataManagerApp||(AngularTablesDataManagerApp={}));var AngularTablesDataManagerApp;!function(t){var e;!function(e){var r=t.Models,a=function(){function t(t,e,r){this.$http=t,this.$q=e,this.$filter=r}return t.prototype.getMetadata=function(t,e){var a=this.$q.defer(),i={method:"GET",url:"/odata/$metadata"},n=this;return this.$http(i).then(function(i){var o=i.data.toString(),s=$.parseXML(o),u=$(s),c=new Array;return u.find('EntityType[Name="'+t+'"]').find("Property").each(function(){if(n.$filter("filter")(e,{$:$(this).attr("Name")}).length>0){var t=new r.MetadataProperty;t.Name=$(this).attr("Name"),t.Type=$(this).attr("Type"),t.Nullable=null!=$(this).attr("Nullable")&&"true"==$(this).attr("Nullable").toLowerCase(),c.push(t)}}),a.resolve(c)}),a.promise},t.factory=function(){return function(e,r,a){return new t(e,r,a)}},t}();e.MetadataService=a,t.AngularTablesDataManager.module.factory("MetadataService",["$http","$q","$filter",a.factory()])}(e=t.Services||(t.Services={}))}(AngularTablesDataManagerApp||(AngularTablesDataManagerApp={}));var __extends=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var a in e)e.hasOwnProperty(a)&&(t[a]=e[a]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},AngularTablesDataManagerApp;!function(t){var e;!function(e){var r=t.Commons,a=t.Services,i=function(t){function e(e,r,a){t.call(this,"Cities","City",a),this.$q=r,this.metadataService=a,this.resource=e("/odata/"+this.entitySet+"(guid':key')",{key:"@Id"},{get:{method:"GET"},create:{method:"POST",isArray:!1,url:"/odata/"+this.entitySet},save:{method:"PUT"},query:{method:"GET",isArray:!1,url:"/odata/"+this.entitySet},"delete":{method:"DELETE"}})}return __extends(e,t),e.prototype.create=function(t){return this.resource.create(t)},e.prototype.save=function(t){return t.Id==r.Constants.GuidEmpty?this.resource.create(t):this.resource.save(t)},e.prototype["delete"]=function(t){return this.resource["delete"]({key:t.Id})},e.prototype.getGridData=function(e){var r,a=this,i=this.$q.defer();return this.resource.query().$promise.then(function(n){return r=n.value,i.resolve(t.prototype.getData.call(a,e,r))},function(t){return i.reject(t)}),i.promise},e.prototype.createGridData=function(e){var a={Id:r.Constants.GuidEmpty,Name:""};return t.prototype.createData.call(this,e,a)},e.prototype.saveGridData=function(e){var r=this.$q.defer();return this.save(t.prototype.saveData.call(this,e)).$promise.then(function(t){return e.Entity=t,r.resolve(e)},function(t){return r.reject(t)}),r.promise},e.prototype.deleteGridData=function(t){var e=this.$q.defer();return this["delete"](t.Entity).$promise.then(function(r){return e.resolve(t)},function(t){return e.reject(t)}),e.promise},e.factory=function(){return function(t,r,a){return new e(t,r,a)}},e}(a.GridService);e.CitiesService=i,t.AngularTablesDataManager.module.factory("CitiesService",["$resource","$q","MetadataService",i.factory()])}(e=t.Services||(t.Services={}))}(AngularTablesDataManagerApp||(AngularTablesDataManagerApp={}));var __extends=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var a in e)e.hasOwnProperty(a)&&(t[a]=e[a]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},AngularTablesDataManagerApp;!function(t){var e;!function(e){var r=t.Commons,a=t.Services,i=function(t){function e(e,r,a){t.call(this,"Zips","Zip",a),this.$q=r,this.metadataService=a,this.resource=e("/odata/"+this.entitySet+"(guid':key')",{key:"@Id"},{get:{method:"GET"},create:{method:"POST",isArray:!1,url:"/odata/"+this.entitySet},save:{method:"PUT"},query:{method:"GET",isArray:!1,url:"/odata/"+this.entitySet},"delete":{method:"DELETE"}})}return __extends(e,t),e.prototype.create=function(t){return this.resource.create(t)},e.prototype.save=function(t){return t.Id==r.Constants.GuidEmpty?this.resource.create(t):this.resource.save(t)},e.prototype["delete"]=function(t){return this.resource["delete"]({key:t.Id})},e.prototype.getGridData=function(e){var r,a=this,i=this.$q.defer();return this.resource.query().$promise.then(function(n){return r=n.value,i.resolve(t.prototype.getData.call(a,e,r))},function(t){return i.reject(t)}),i.promise},e.prototype.createGridData=function(e){var a={Id:r.Constants.GuidEmpty,Code:null};return t.prototype.createData.call(this,e,a)},e.prototype.saveGridData=function(e){var r=this.$q.defer();return this.save(t.prototype.saveData.call(this,e)).$promise.then(function(t){return e.Entity=t,r.resolve(e)},function(t){return r.reject(t)}),r.promise},e.prototype.deleteGridData=function(t){var e=this.$q.defer();return this["delete"](t.Entity).$promise.then(function(r){return e.resolve(t)},function(t){return e.reject(t)}),e.promise},e.factory=function(){return function(t,r,a){return new e(t,r,a)}},e}(a.GridService);e.ZipsService=i,t.AngularTablesDataManager.module.factory("ZipsService",["$resource","$q","MetadataService",i.factory()])}(e=t.Services||(t.Services={}))}(AngularTablesDataManagerApp||(AngularTablesDataManagerApp={}));var AngularTablesDataManagerApp;!function(t){var e;!function(e){var r=function(){function t(){this.restrict="A",this.scope={tipology:"="},this.link=function(t,e,r){"Edm.String"==t.tipology.Type?e.attr("type","text"):-1!=t.tipology.Type.toLowerCase().indexOf("int")&&e.attr("type","number")}}return t}();e.FieldDirective=r,t.AngularTablesDataManager.module.directive("field",function(){return new e.FieldDirective})}(e=t.Directives||(t.Directives={}))}(AngularTablesDataManagerApp||(AngularTablesDataManagerApp={}));var AngularTablesDataManagerApp;!function(t){var e;!function(e){var r=t.Models,a=function(){function t(t){this.$scope=t}return t.prototype.Edit=function(t){this.$scope.item=t,this.$scope.newItem=!1},t.prototype.New=function(){this.$scope.item=new r.Row(angular.copy(this.$scope.rowModel.Entity),this.$scope.rowModel.Name,angular.copy(this.$scope.rowModel.Properties)),this.$scope.newItem=!0},t.prototype.Save=function(t){var e={item:t};this.$scope.Save(e)},t.prototype.Delete=function(t){this.$scope.item=null;var e={item:t};this.$scope.Delete(e)},t.prototype.Close=function(){if(!this.$scope.newItem)for(var t=0;t<this.$scope.item.Properties.length;t++)this.$scope.item.Properties[t].Value=this.$scope.item.Entity[this.$scope.item.Properties[t].Name];this.$scope.item=null},t}(),i=function(){function t(){this.restrict="E",this.templateUrl="app/directives/grid.html",this.scope={list:"=",rowModel:"=",order:"@order",New:"&new",Save:"&save",Delete:"&delete"},this.controller=a}return t}();e.GridDirective=i;var n=function(){function t(){this.require="^grid",this.restrict="E",this.templateUrl="app/directives/gridList.html",this.scope={list:"=",order:"="},this.link=function(t,e,r,a){t.New=function(){a.New()}}}return t}();e.GridListDirective=n;var o=function(){function t(){this.restrict="A",this.templateUrl="app/directives/gridColumn.html",this.scope={gridColumn:"="}}return t}();e.GridColumnDirective=o;var s=function(){function t(){this.require="^grid",this.restrict="A",this.templateUrl="app/directives/gridRow.html",this.scope={gridRow:"="},this.link=function(t,e,r,a){t.Edit=function(){a.Edit(t.gridRow)}}}return t}();e.GridRowDirective=s;var u=function(){function t(){this.restrict="A",this.templateUrl="app/directives/gridCell.html",this.scope={gridCell:"="}}return t}();e.GridCellDirective=u;var c=function(){function t(t){var e=this;this.require="^grid",this.restrict="E",this.templateUrl="app/directives/gridItem.html",this.scope={item:"=",metadata:"=",isNew:"="},this.link=function(t,r,a,i){t.Save=function(){i.Save(t.item)},t.Delete=function(){i.Delete(t.item)},t.Close=function(){i.Close()},t.GetMetadataProperty=function(r){return e.$filter("filter")(t.metadata,{Name:r})[0]}},this.$filter=t}return t}();e.GridItemDirective=c,t.AngularTablesDataManager.module.directive("grid",function(){return new e.GridDirective}),t.AngularTablesDataManager.module.directive("gridList",function(){return new e.GridListDirective}),t.AngularTablesDataManager.module.directive("gridColumn",function(){return new e.GridColumnDirective}),t.AngularTablesDataManager.module.directive("gridRow",function(){return new e.GridRowDirective}),t.AngularTablesDataManager.module.directive("gridCell",function(){return new e.GridCellDirective}),t.AngularTablesDataManager.module.directive("gridItem",["$filter",function(t){return new e.GridItemDirective(t)}])}(e=t.Directives||(t.Directives={}))}(AngularTablesDataManagerApp||(AngularTablesDataManagerApp={}));var AngularTablesDataManagerApp;!function(t){var e;!function(e){var r=t.Commons,a=t.Models,i=function(){function t(t,e){this.citiesService=e,this.constant=r.Constants,this.toaster=t,this.grid=new a.Grid,this.grid.Title="Cities",this.Load()}return t.$inject=["toaster","CitiesService"],t.prototype.Load=function(){var t=this,e=new Array("Name"),r=this;this.citiesService.getMetadata(e).then(function(e){r.grid.Columns=e,r.rowModel=t.citiesService.createGridData(e),t.citiesService.getGridData(e).then(function(t){r.grid.Rows=t,r.toaster.success("Cities loaded successfully.")},function(t){r.toaster.error("Error loading cities",t.message)})},function(t){r.toaster.error("Error loading cities metadata",t.data.message)})},t.prototype.Save=function(t){var e=this,a=this,i=!1;t.Entity.Id==r.Constants.GuidEmpty&&(i=!0),this.citiesService.saveGridData(t).then(function(t){i&&a.grid.Rows.push(t),e.toaster.success("City saved successfully.")},function(t){e.toaster.error("Error saving city",t.data.message)})},t.prototype.Delete=function(t){var e=this,r=this;this.citiesService.deleteGridData(t).then(function(a){var i=r.grid.Rows.indexOf(t);r.grid.Rows.splice(i,1),e.toaster.success("City deleted successfully.")},function(t){e.toaster.error("Error deleting city",t.data.message)})},t}();e.CitiesController=i,t.AngularTablesDataManager.module.controller("CitiesController",i)}(e=t.Controllers||(t.Controllers={}))}(AngularTablesDataManagerApp||(AngularTablesDataManagerApp={}));var AngularTablesDataManagerApp;!function(t){var e;!function(e){var r=t.Commons,a=t.Models,i=function(){function t(t,e){this.zipsService=e,this.constant=r.Constants,this.toaster=t,this.grid=new a.Grid,this.grid.Title="Zips",this.Load()}return t.$inject=["toaster","ZipsService"],t.prototype.Load=function(){var t=this,e=new Array("Code"),r=this;this.zipsService.getMetadata(e).then(function(e){r.grid.Columns=e,r.rowModel=t.zipsService.createGridData(e),t.zipsService.getGridData(e).then(function(t){r.grid.Rows=t,r.toaster.success("Zips loaded successfully.")},function(t){r.toaster.error("Error loading zips",t.message)})},function(t){r.toaster.error("Error loading zips metadata",t.data.message)})},t.prototype.Save=function(t){var e=this,a=this,i=!1;t.Entity.Id==r.Constants.GuidEmpty&&(i=!0),this.zipsService.saveGridData(t).then(function(t){i&&a.grid.Rows.push(t),e.toaster.success("Zip saved successfully.")},function(t){e.toaster.error("Error saving zip",t.data.message)})},t.prototype.Delete=function(t){var e=this,r=this;this.zipsService.deleteGridData(t).then(function(a){var i=r.grid.Rows.indexOf(t);r.grid.Rows.splice(i,1),e.toaster.success("Zip deleted successfully.")},function(t){e.toaster.error("Error deleting zip",t.data.message)})},t}();e.ZipsController=i,t.AngularTablesDataManager.module.controller("ZipsController",i)}(e=t.Controllers||(t.Controllers={}))}(AngularTablesDataManagerApp||(AngularTablesDataManagerApp={}));